{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\barraud\\\\Desktop\\\\WhiteHatJR\\\\barter-app-stage-8\\\\screens\\\\Exchange.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport firebase from 'firebase';\nimport db from \"../config\";\nimport MyHeader from \"../components/MyHeader\";\n\nvar Exchange = function (_Component) {\n  _inherits(Exchange, _Component);\n\n  var _super = _createSuper(Exchange);\n\n  function Exchange() {\n    var _this;\n\n    _classCallCheck(this, Exchange);\n\n    _this = _super.call(this);\n\n    _this.addItem = function _callee(itemName, description) {\n      var userName;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userName = _this.state.userName;\n              exchangeId = _this.createUniqueId();\n              db.collection(\"exchange_requests\").add({\n                \"username\": userName,\n                \"item_name\": itemName,\n                \"description\": description,\n                \"exchangeId\": exchangeId,\n                \"item_status\": \"requested\",\n                \"date\": firebase.firestore.FieldValue.serverTimestamp()\n              });\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(_this.getExchangeRequest());\n\n            case 5:\n              db.collection('users').where(\"username\", \"==\", userName).get().then().then(function (snapshot) {\n                snapshot.forEach(function (doc) {\n                  db.collection('users').doc(doc.id).update({\n                    IsExchangeRequestActive: true\n                  });\n                });\n              });\n\n              _this.setState({\n                itemName: '',\n                description: ''\n              });\n\n              return _context.abrupt(\"return\", Alert.alert('Item ready to exchange', '', [{\n                text: 'OK',\n                onPress: function onPress() {\n                  _this.props.navigation.navigate('HomeScreen');\n                }\n              }]));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getExchangeRequest = function () {\n      var exchangeRequest = db.collection('exchange_requests').where('username', '==', _this.state.userName).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          if (doc.data().item_status !== \"received\") {\n            _this.setState({\n              exchangeId: doc.data().exchangeId,\n              requestedItemName: doc.data().item_name,\n              itemStatus: doc.data().item_status,\n              docId: doc.id\n            });\n          }\n        });\n      });\n    };\n\n    _this.receivedItem = function (bookName) {\n      var userId = _this.state.userName;\n      var exchangeId = _this.state.exchangeId;\n      db.collection('received_items').add({\n        \"user_id\": userId,\n        \"item_name\": itemName,\n        \"exchange_id\": exchangeId,\n        \"itemStatus\": \"received\"\n      });\n    };\n\n    _this.updateExchangeRequestStatus = function () {\n      db.collection('requested_requests').doc(_this.state.docId).update({\n        item_status: 'recieved'\n      });\n      db.collection('users').where('username', '==', _this.state.userName).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          db.collection('users').doc(doc.id).update({\n            IsExchangeRequestActive: false\n          });\n        });\n      });\n    };\n\n    _this.sendNotification = function () {\n      db.collection('users').where('username', '==', _this.state.userName).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var name = doc.data().first_name;\n          var lastName = doc.data().last_name;\n          db.collection('all_notifications').where('exchangeId', '==', _this.state.exchangeId).get().then(function (snapshot) {\n            snapshot.forEach(function (doc) {\n              var donorId = doc.data().donor_id;\n              var bookName = doc.data().item_name;\n              db.collection('all_notifications').add({\n                \"targeted_user_id\": donorId,\n                \"message\": name + \" \" + lastName + \" received the item \" + itemName,\n                \"notification_status\": \"unread\",\n                \"item_name\": itemName\n              });\n            });\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      userName: firebase.auth().currentUser.email,\n      itemName: \"\",\n      description: \"\",\n      requestedItemName: \"\",\n      exchangeId: \"\",\n      itemStatus: \"\",\n      docId: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Exchange, [{\n    key: \"createUniqueId\",\n    value: function createUniqueId() {\n      return Math.random().toString(36).substring(7);\n    }\n  }, {\n    key: \"getIsExchangeRequestActive\",\n    value: function getIsExchangeRequestActive() {\n      var _this2 = this;\n\n      db.collection('users').where('username', '==', this.state.userName).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this2.setState({\n            IsExchangeRequestActive: doc.data().IsExchangeRequestActive,\n            userDocId: doc.id\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getExchangeRequest();\n      this.getIsExchangeRequestActive();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.IsExchangeRequestActive === true) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: {\n            borderColor: \"orange\",\n            borderWidth: 2,\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: 10,\n            margin: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 10\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 10\n          }\n        }, \"Item Name\"), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 10\n          }\n        }, this.state.requestedItemName)), React.createElement(View, {\n          style: {\n            borderColor: \"orange\",\n            borderWidth: 2,\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: 10,\n            margin: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 10\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 10\n          }\n        }, \" Item Status \"), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 10\n          }\n        }, this.state.itemStatus)), React.createElement(TouchableOpacity, {\n          style: {\n            borderWidth: 1,\n            borderColor: 'orange',\n            backgroundColor: \"orange\",\n            width: 300,\n            alignSelf: 'center',\n            alignItems: 'center',\n            height: 30,\n            marginTop: 30\n          },\n          onPress: function onPress() {\n            _this3.sendNotification();\n\n            _this3.updateExchangeRequestStatus();\n\n            _this3.receivedItem(_this3.state.requestedItemName);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 10\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 10\n          }\n        }, \"I recieved the Item \")));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 9\n          }\n        }, React.createElement(MyHeader, {\n          title: \"Add Item\",\n          navigation: this.props.navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 9\n          }\n        }), React.createElement(KeyboardAvoidingView, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 9\n          }\n        }, React.createElement(TextInput, {\n          style: styles.formTextInput,\n          placeholder: \"Item Name\",\n          maxLength: 8,\n          onChangeText: function onChangeText(text) {\n            _this3.setState({\n              itemName: text\n            });\n          },\n          value: this.state.itemName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }\n        }), React.createElement(TextInput, {\n          multiline: true,\n          numberOfLines: 4,\n          style: [styles.formTextInput, {\n            height: 100\n          }],\n          placeholder: \"Description\",\n          onChangeText: function onChangeText(text) {\n            _this3.setState({\n              description: text\n            });\n          },\n          value: this.state.description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 11\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: [styles.button, {\n            marginTop: 10\n          }],\n          onPress: function onPress() {\n            _this3.addItem(_this3.state.itemName, _this3.state.description);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: '#ffff',\n            fontSize: 18,\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }\n        }, \"Add Item\"))));\n      }\n    }\n  }]);\n\n  return Exchange;\n}(Component);\n\nexport { Exchange as default };\nvar styles = StyleSheet.create({\n  formTextInput: {\n    width: \"75%\",\n    height: 35,\n    alignSelf: 'center',\n    borderColor: '#ffab91',\n    borderRadius: 10,\n    borderWidth: 1,\n    marginTop: 20,\n    padding: 10\n  },\n  button: {\n    width: \"75%\",\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: \"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/barraud/Desktop/WhiteHatJR/barter-app-stage-8/screens/Exchange.js"],"names":["React","Component","firebase","db","MyHeader","Exchange","addItem","itemName","description","userName","state","exchangeId","createUniqueId","collection","add","firestore","FieldValue","serverTimestamp","getExchangeRequest","where","get","then","snapshot","forEach","doc","id","update","IsExchangeRequestActive","setState","Alert","alert","text","onPress","props","navigation","navigate","exchangeRequest","data","item_status","requestedItemName","item_name","itemStatus","docId","receivedItem","bookName","userId","updateExchangeRequestStatus","sendNotification","name","first_name","lastName","last_name","donorId","donor_id","auth","currentUser","email","Math","random","toString","substring","onSnapshot","querySnapshot","userDocId","getIsExchangeRequestActive","flex","justifyContent","borderColor","borderWidth","alignItems","padding","margin","backgroundColor","width","alignSelf","height","marginTop","styles","formTextInput","button","color","fontSize","fontWeight","StyleSheet","create","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, StyleSheet, Text, TextInput,KeyboardAvoidingView,TouchableOpacity,Alert, ToastAndroid } from 'react-native';\r\nimport firebase from 'firebase';\r\nimport db from '../config';\r\nimport MyHeader from '../components/MyHeader'\r\n\r\nexport default class Exchange extends Component {\r\n\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      userName : firebase.auth().currentUser.email,\r\n      itemName : \"\",\r\n      description : \"\",\r\n      requestedItemName:\"\",\r\n      exchangeId:\"\",\r\n      itemStatus:\"\",\r\n      docId: \"\"\r\n\r\n    }\r\n  }\r\n\r\n  createUniqueId(){\r\n    return Math.random().toString(36).substring(7);\r\n  }\r\n\r\n  addItem= async(itemName, description)=>{\r\n    var userName = this.state.userName\r\n    exchangeId = this.createUniqueId()\r\n    db.collection(\"exchange_requests\").add({\r\n      \"username\"    : userName,\r\n      \"item_name\"   : itemName,\r\n      \"description\" : description,\r\n      \"exchangeId\"  : exchangeId,\r\n      \"item_status\" : \"requested\",\r\n        \"date\"       : firebase.firestore.FieldValue.serverTimestamp()\r\n\r\n     })\r\n\r\n     await this.getExchangeRequest()\r\n     db.collection('users').where(\"username\",\"==\",userName).get()\r\n   .then()\r\n   .then((snapshot)=>{\r\n     snapshot.forEach((doc)=>{\r\n       db.collection('users').doc(doc.id).update({\r\n     IsExchangeRequestActive: true\r\n     })\r\n   })\r\n })\r\n\r\n     this.setState({\r\n       itemName : '',\r\n       description :''\r\n     })\r\n\r\n\r\n\r\n     // NOTE: Comment below return statement when you test the app in ios\r\n     // ToastAndroid.showWithGravityAndOffset('Item ready to exchange',\r\n     //    ToastAndroid.SHORT,\r\n     //  );\r\n     // return this.props.navigation.navigate('HomeScreen')\r\n\r\n     // NOTE:  Comment the below return statement when you test the app in android\r\n     return Alert.alert(\r\n          'Item ready to exchange',\r\n          '',\r\n          [\r\n            {text: 'OK', onPress: () => {\r\n\r\n              this.props.navigation.navigate('HomeScreen')\r\n            }}\r\n          ]\r\n      );\r\n  }\r\n\r\n\r\n  getIsExchangeRequestActive(){\r\n    db.collection('users')\r\n    .where('username','==',this.state.userName)\r\n    .onSnapshot(querySnapshot => {\r\n      querySnapshot.forEach(doc => {\r\n        this.setState({\r\n          IsExchangeRequestActive:doc.data().IsExchangeRequestActive,\r\n          userDocId : doc.id\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  getExchangeRequest =()=>{\r\n    // getting the requested item\r\n  var exchangeRequest=  db.collection('exchange_requests')\r\n    .where('username','==',this.state.userName)\r\n    .get()\r\n    .then((snapshot)=>{\r\n      snapshot.forEach((doc)=>{\r\n        if(doc.data().item_status !== \"received\"){\r\n          this.setState({\r\n            exchangeId : doc.data().exchangeId,\r\n            requestedItemName: doc.data().item_name,\r\n            itemStatus:doc.data().item_status,\r\n            docId     : doc.id\r\n          })\r\n        }\r\n      })\r\n  })\r\n}\r\n\r\n  componentDidMount(){\r\n    this.getExchangeRequest()\r\n    this.getIsExchangeRequestActive()\r\n\r\n  }\r\n\r\n\r\n  receivedItem=(bookName)=>{\r\n    var userId = this.state.userName\r\n    var exchangeId = this.state.exchangeId\r\n    db.collection('received_items').add({\r\n        \"user_id\": userId,\r\n        \"item_name\":itemName,\r\n        \"exchange_id\"  : exchangeId,\r\n        \"itemStatus\"  : \"received\",\r\n\r\n    })\r\n  }\r\n\r\n  updateExchangeRequestStatus=()=>{\r\n    //updating the book status after receiving the book\r\n    db.collection('requested_requests').doc(this.state.docId)\r\n    .update({\r\n      item_status : 'recieved'\r\n    })\r\n\r\n    //getting the  doc id to update the users doc\r\n    db.collection('users').where('username','==',this.state.userName).get()\r\n    .then((snapshot)=>{\r\n      snapshot.forEach((doc) => {\r\n        //updating the doc\r\n        db.collection('users').doc(doc.id).update({\r\n          IsExchangeRequestActive: false\r\n        })\r\n      })\r\n    })\r\n\r\n}\r\n  sendNotification=()=>{\r\n    //to get the first name and last name\r\n    db.collection('users').where('username','==',this.state.userName).get()\r\n    .then((snapshot)=>{\r\n      snapshot.forEach((doc)=>{\r\n        var name = doc.data().first_name\r\n        var lastName = doc.data().last_name\r\n\r\n        // to get the donor id and item name\r\n        db.collection('all_notifications').where('exchangeId','==',this.state.exchangeId).get()\r\n        .then((snapshot)=>{\r\n          snapshot.forEach((doc) => {\r\n            var donorId  = doc.data().donor_id\r\n            var bookName =  doc.data().item_name\r\n\r\n            //targert user id is the donor id to send notification to the user\r\n            db.collection('all_notifications').add({\r\n              \"targeted_user_id\" : donorId,\r\n              \"message\" : name +\" \" + lastName + \" received the item \" + itemName ,\r\n              \"notification_status\" : \"unread\",\r\n              \"item_name\" : itemName\r\n            })\r\n          })\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  render()\r\n  {\r\n    if (this.state.IsExchangeRequestActive === true){\r\n      // status screen\r\n      return(\r\n        <View style = {{flex:1,justifyContent:'center'}}>\r\n         <View style={{borderColor:\"orange\",borderWidth:2,justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n         <Text>Item Name</Text>\r\n         <Text>{this.state.requestedItemName}</Text>\r\n         </View>\r\n         <View style={{borderColor:\"orange\",borderWidth:2,justifyContent:'center',alignItems:'center',padding:10,margin:10}}>\r\n         <Text> Item Status </Text>\r\n\r\n         <Text>{this.state.itemStatus}</Text>\r\n         </View>\r\n\r\n         <TouchableOpacity style={{borderWidth:1,borderColor:'orange',backgroundColor:\"orange\",width:300,alignSelf:'center',alignItems:'center',height:30,marginTop:30}}\r\n         onPress={()=>{\r\n           this.sendNotification()\r\n           this.updateExchangeRequestStatus();\r\n           this.receivedItem(this.state.requestedItemName)\r\n         }}>\r\n         <Text>I recieved the Item </Text>\r\n         </TouchableOpacity>\r\n       </View>\r\n     )\r\n\r\n    }\r\n    else {\r\n      return(\r\n        <View style={{flex:1}}>\r\n        <MyHeader title=\"Add Item\" navigation ={this.props.navigation}/>\r\n        <KeyboardAvoidingView style={{flex:1,justifyContent:'center', alignItems:'center'}}>\r\n          <TextInput\r\n            style={styles.formTextInput}\r\n            placeholder ={\"Item Name\"}\r\n            maxLength ={8}\r\n            onChangeText={(text)=>{\r\n              this.setState({\r\n                itemName: text\r\n              })\r\n            }}\r\n            value={this.state.itemName}\r\n          />\r\n          <TextInput\r\n            multiline\r\n            numberOfLines={4}\r\n            style={[styles.formTextInput,{height:100}]}\r\n            placeholder ={\"Description\"}\r\n            onChangeText={(text)=>{\r\n              this.setState({\r\n                description: text\r\n              })\r\n            }}\r\n            value={this.state.description}\r\n\r\n          />\r\n          <TouchableOpacity\r\n            style={[styles.button,{marginTop:10}]}\r\n            onPress = {()=>{this.addItem(this.state.itemName, this.state.description)}}\r\n            >\r\n            <Text style={{color:'#ffff', fontSize:18, fontWeight:'bold'}}>Add Item</Text>\r\n          </TouchableOpacity>\r\n        </KeyboardAvoidingView>\r\n        </View>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  formTextInput:{\r\n    width:\"75%\",\r\n    height:35,\r\n    alignSelf:'center',\r\n    borderColor:'#ffab91',\r\n    borderRadius:10,\r\n    borderWidth:1,\r\n    marginTop:20,\r\n    padding:10\r\n  },\r\n  button:{\r\n    width:\"75%\",\r\n    height:50,\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    borderRadius:10,\r\n    backgroundColor:\"#ff5722\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n       width: 0,\r\n       height: 8,\r\n    },\r\n    shadowOpacity: 0.44,\r\n    shadowRadius: 10.32,\r\n    elevation: 16,\r\n  },\r\n\r\n})\r\n"]},"metadata":{},"sourceType":"module"}